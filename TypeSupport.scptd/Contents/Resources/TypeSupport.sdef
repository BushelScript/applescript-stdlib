<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE dictionary SYSTEM "file://localhost/System/Library/DTDs/sdef.dtd">
<dictionary>


	<suite name="Type Checking" code="****">
	
		<!-- TO DO: make these identifier-based commands? -->

		<command name="native type" code="Typ:NaTy" description="get an AppleScript object's true type">
			<parameter name="for" code="Valu" type="any"/>
			<result type="type" description="the name of the object's type"/>
			<documentation>
				<html><![CDATA[
<p>If the given object is a reference to another object (or objects), returns <code>specifier</code> (a.k.a. <code>reference</code>). If the given object is a record or script object, returns <code>record</code> or <code>script</code> respectively, ignoring its custom <code>class</code> property if it has one. Otherwise, returns the value of the object's <code>class</code> property.</p> 

<!-- note that getting an application object's 'class' property may also give the wrong result, depending on whether or not the app's dictionary defines a 'class' property for it, but to keep this documentation simple it isn't mentioned here -->

<pre><code>native type for {class:document, name:"Untitled"} → record
native type for (document 1 of application "TextEdit") → specifier</code></pre>
				]]></html>
			</documentation>
		</command>

		<command name="check type" code="Typ:ChkT" description="check if an object is one of the specified AppleScript types">
			<parameter name="for" code="Valu" type="any"/>
			<parameter name="is" code="Type">
				<type type="type class" list="yes"/>
			</parameter>
			<result type="boolean"/>
			<documentation>
				<html><![CDATA[
<p>This is a more reliable alternative to <code>theValue's class is TYPE</code>, which returns the wrong result for some types of objects (e.g. record, script, specifier, application). For example:</p>

<pre><code>check type for {class:list} is list → false (it's a record)
check type for (document 1 of application "TextEdit") is list  → false (it's a specifier)

check type for {class:document, name:"ReadMe.txt"} is record → true
check type for (document 1  of application "TextEdit") is specifier → true
check type for 3.14 is {number, text, date} → true</code></pre>

<p>(Tip: To check for an AppleScript-ObjC specifier in particular, use <code>«class ocid»</code>.)</p>
				]]></html>
			</documentation>
		</command>


		<command name="convert to Cocoa" code="Typ:OCID" description="convert an AppleScript value to its Cocoa equivalent">
			<parameter name="from" code="From" type="any"/>
			<result type="specifier" description="an AppleScript-ObjC object specifier, ‘«class ocid» id «data optr...»’"/>
		</command>

	</suite>
	

	
	<suite name="Parameter Checking" code="****">
		
			<documentation>
				<html><![CDATA[
				
				]]></html>
			</documentation>
			
	</suite>
	
	
	
</dictionary>
